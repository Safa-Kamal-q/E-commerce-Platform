name: Combined Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set image version (tag)
        id: image_version
        run: echo "gitsha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag the Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/safa-kamal-q/e-commerce-platform:9d3bc24

      - name: Transfer Docker Image to EC2
        run: |
          docker save ghcr.io/safa-kamal-q/e-commerce-platform:9d3bc24 | gzip -c > image.tar.gz
          scp -i xpresscart.pem -o StrictHostKeyChecking=no image.tar.gz ubuntu@ec2-3-71-188-147.eu-central-1.compute.amazonaws.com:~
          ssh -i xpresscart.pem -o StrictHostKeyChecking=no ubuntu@ec2-3-71-188-147.eu-central-1.compute.amazonaws.com "docker load -i ~/image.tar.gz"
        env:
           gitsha: cf1d35e


      - name: Deploy Node.js Application
        run: |
          # Execute your Node.js application deployment commands here
          ssh -i "xpresscart.pem" -o StrictHostKeyChecking=no ubuntu@ec2-3-71-188-147.eu-central-1.compute.amazonaws.com "cd /path/to/your/app && docker-compose -f docker-compose-prod.yml up -d"
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          GIT_VERSION: ${{ steps.image_version.outputs.gitsha }}

      - name: Print Deployment Logs
        if: always()
        run: docker-compose -f docker-compose-prod.yml logs

  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: "home"
